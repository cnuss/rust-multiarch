name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - run: |
          apt-get udpate
          ls -alR /etc/apt/sources.list.d

      - name: Setup OpenSSL
        if: matrix.arch == 'x86_64'
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev
          echo "OPENSSL_DIR=/usr/lib/ssl" >> $GITHUB_ENV

      - name: Setup for aarch64
        if: matrix.arch == 'aarch64'
        run: |
          dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu libssl-dev:arm64
          echo "export CC_aarch64-unknown-linux-musl=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Setup Rust
        run: |
          rustup toolchain install stable --profile minimal
          rustup target add ${{ matrix.arch }}-unknown-linux-musl

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.arch }}

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.arch }}-unknown-linux-musl
          mkdir ./dist
          cp target/${{ matrix.arch }}-unknown-linux-musl/release/rust-multiarch ./dist/rust-multiarch

      # - name: Smoke Test
      #   run: |
      #     docker build -t --platform ${{ matrix.platform }} rust-multiarch .
      #     docker run --rm --platform ${{ matrix.platform }} rust-multiarch
